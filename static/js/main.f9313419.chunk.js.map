{"version":3,"sources":["components/MainWindow/History/Message.js","components/MainWindow/History/MessageList.js","context/chat/chatContext.js","components/MainWindow/Form/FormSend.js","components/MainWindow/MainWindow.js","App.js","context/chat/chatReducer.js","context/types.js","context/chat/ChatState.js","index.js"],"names":["userId","message","className","from","text","messagesList","map","Message","key","id","ChatContext","createContext","addMessages","useContext","useState","newMsgText","setNewMsgText","sendMessage","trim","length","newMessage","Date","now","value","onChange","e","target","onKeyDown","ctrlKey","keyPressTextarea","autoFocus","disabled","onClick","user","name","MessageList","App","usersList","loadMessage","useEffect","chatReducer","state","action","type","payload","ChatState","children","useReducer","dispatch","getMessagesFromLS","window","localStorage","JSON","parse","getItem","Provider","messagesFromLS","push","setItem","stringify","addMessagesToLS","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9313419.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default ({userId, message}) => {\r\n    return (\r\n        <div className={message.from === userId ? 'message message_from' : 'message message_to'}>\r\n            <div className = 'message__inner'>\r\n                {message.text}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport Message from \"./Message\"\r\nimport './Messages.css'\r\nimport ScrollToBottom from 'react-scroll-to-bottom'\r\n\r\nexport default ({userId, messagesList}) => {\r\n    return (\r\n        <ScrollToBottom className='message__container'>\r\n            <div className='message__container-inner'>\r\n                { messagesList.map( message => <Message\r\n                    key = {message.id}\r\n                    message={message}\r\n                    userId = {userId}/>)\r\n                }\r\n            </div>\r\n        </ScrollToBottom>\r\n    )\r\n}","import {createContext} from \"react\"\r\n\r\nexport const ChatContext = createContext()","import React, {useContext, useState} from 'react'\r\nimport {ChatContext} from \"../../../context/chat/chatContext\"\r\nimport './FormSend.css'\r\n\r\nexport default ({userId}) => {\r\n    const {addMessages} = useContext(ChatContext)\r\n    const [newMsgText, setNewMsgText] = useState('')\r\n\r\n    const sendMessage = () => {\r\n        if(newMsgText.trim().length){\r\n            const newMessage = {\r\n                id: Date.now()+userId,\r\n                from: userId,\r\n                text: newMsgText\r\n            }\r\n            addMessages(newMessage)\r\n\r\n            setNewMsgText('')\r\n        }\r\n    }\r\n\r\n    const keyPressTextarea = e => {\r\n        if(e.key === 'Enter' && e.ctrlKey) {\r\n            sendMessage()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='form'>\r\n            <textarea\r\n                className='form__textarea'\r\n                value={newMsgText}\r\n                onChange={ e => {setNewMsgText(e.target.value)}}\r\n                onKeyDown={ e => {keyPressTextarea(e)}}\r\n                autoFocus\r\n            />\r\n            <button\r\n                className='form__button'\r\n                disabled = {!newMsgText.trim().length}\r\n                onClick = {sendMessage}>Send</button>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport MessageList from \"./History/MessageList\"\r\nimport FormSend from \"./Form/FormSend\"\r\nimport './MainWindow.css'\r\n\r\nexport default ({user, name, messagesList}) => {\r\n    return <div className='chat__container'>\r\n        <h3 className='chat__header'>{name} <small>{user.name}</small></h3>\r\n        <MessageList userId = {user.id} messagesList = {messagesList}/>\r\n        <FormSend userId = {user.id}/>\r\n    </div>\r\n}","import React, {useContext, useEffect} from 'react'\nimport MainWindow from \"./components/MainWindow/MainWindow\"\nimport {ChatContext} from \"./context/chat/chatContext\"\nimport './App.css'\n\nfunction App() {\n    const {name, usersList, messagesList, loadMessage} = useContext(ChatContext)\n    useEffect(() => {\n        loadMessage()\n    }, [])\n\n  return (\n        <div className=\"container\">\n            {usersList.map( user => <MainWindow\n                key = {user.id}\n                name = {name}\n                user= {user}\n                messagesList={messagesList}/> )\n            }\n        </div>\n  )\n}\n\nexport default App\n","import {ADD_MESSAGE, LOAD_MESSAGE} from \"../types\"\r\n\r\n\r\nexport const chatReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case LOAD_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messagesList: [...action.payload, ...state.messagesList]\r\n            };\r\n        case ADD_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messagesList: [...state.messagesList, action.payload]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export const LOAD_MESSAGE = 'LOAD_MESSAGE'\r\nexport const ADD_MESSAGE = 'ADD_MESSAGE'","import React, {useReducer} from 'react'\r\nimport {chatReducer} from \"./chatReducer\"\r\nimport {ChatContext} from \"./chatContext\"\r\nimport {ADD_MESSAGE, LOAD_MESSAGE} from \"../types\"\r\n\r\nconst NAME_LS = 'MESSAGES'\r\n\r\nexport const ChatState = ({children}) => {\r\n    const initialState = {\r\n        id: 23,\r\n        name: 'Тестовый чат',\r\n        usersList: [{id: 1, name: 'operator'},{id: 2, name: 'user'}],\r\n        messagesList: []\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(chatReducer, initialState)\r\n\r\n    const getMessagesFromLS = () => {\r\n        if (window.localStorage) {\r\n            let messagesFromLS = JSON.parse(localStorage.getItem(NAME_LS)) || []\r\n            return messagesFromLS\r\n        }\r\n        return []\r\n    }\r\n\r\n    const addMessagesToLS = message => {\r\n        if (window.localStorage) {\r\n            const messagesFromLS = getMessagesFromLS()\r\n            messagesFromLS.push(message)\r\n            localStorage.setItem(NAME_LS, JSON.stringify(messagesFromLS))\r\n        }\r\n    }\r\n\r\n    const addMessages = message => {\r\n        addMessagesToLS(message)\r\n        dispatch({type: ADD_MESSAGE, payload: message})\r\n    }\r\n\r\n    const loadMessage = () => {\r\n        const messagesFromLS = getMessagesFromLS()\r\n        dispatch({type: LOAD_MESSAGE, payload: messagesFromLS})\r\n    }\r\n\r\n\r\n    return (\r\n        <ChatContext.Provider value={{\r\n            addMessages, loadMessage,\r\n            name: state.name,\r\n            usersList: state.usersList,\r\n            messagesList: state.messagesList\r\n        }}>\r\n            {children}\r\n        </ChatContext.Provider>\r\n    )\r\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport {ChatState} from \"./context/chat/ChatState\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <ChatState><App /></ChatState>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}